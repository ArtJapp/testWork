// Generated by dagger.internal.codegen.ComponentProcessor (https://google.github.io/dagger).
package mrth.legion.joprst.modules;

import dagger.internal.Factory;
import dagger.internal.Preconditions;
import java.io.File;
import javax.inject.Provider;
import okhttp3.Cache;

public final class OkHttpClientModule_CacheFactory implements Factory<Cache> {
  private final OkHttpClientModule module;

  private final Provider<File> cacheFileProvider;

  public OkHttpClientModule_CacheFactory(
      OkHttpClientModule module, Provider<File> cacheFileProvider) {
    this.module = module;
    this.cacheFileProvider = cacheFileProvider;
  }

  @Override
  public Cache get() {
    return Preconditions.checkNotNull(
        module.cache(cacheFileProvider.get()),
        "Cannot return null from a non-@Nullable @Provides method");
  }

  public static Factory<Cache> create(OkHttpClientModule module, Provider<File> cacheFileProvider) {
    return new OkHttpClientModule_CacheFactory(module, cacheFileProvider);
  }
}
